name: Deploy to OVH

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production  # ⬅️ indique l’environnement ici

    steps:
      # Étape de récupération du code
      - name: Checkout code
        uses: actions/checkout@v4

      # Configuration de Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # Create .env file
      - name: Create .env file
        run: |
          APP_NAME="Clément Tribouillard, développeur"
          APP_ENV=production
          cat <<EOF > .env
APP_NAME="$APP_NAME"
APP_ENV=$APP_ENV
APP_KEY=${{ secrets.APP_KEY }}
APP_DEBUG=false
APP_URL=${{ vars.APP_URL }}

APP_LOCALE=fr
APP_FALLBACK_LOCALE=fr
APP_FAKER_LOCALE=fr_CA

APP_MAINTENANCE_DRIVER=file
PHP_CLI_SERVER_WORKERS=4
BCRYPT_ROUNDS=12

LOG_CHANNEL=stack
LOG_STACK=single
LOG_DEPRECATIONS_CHANNEL=null
LOG_LEVEL=debug

DB_CONNECTION=mysql
DB_HOST=${{ secrets.DB_HOST }}
DB_PORT=${{ secrets.DB_PORT }}
DB_DATABASE=${{ secrets.DB_DATABASE }}
DB_USERNAME=${{ secrets.DB_USERNAME }}
DB_PASSWORD=${{ secrets.DB_PASSWORD }}

SESSION_DRIVER=database
SESSION_LIFETIME=120
SESSION_ENCRYPT=false
SESSION_PATH=/
SESSION_DOMAIN=null

BROADCAST_CONNECTION=log
FILESYSTEM_DISK=local
QUEUE_CONNECTION=database

CACHE_STORE=database
MEMCACHED_HOST=127.0.0.1

REDIS_CLIENT=phpredis
REDIS_HOST=127.0.0.1
REDIS_PASSWORD=null
REDIS_PORT=6379

MAIL_MAILER=log
MAIL_SCHEME=null
MAIL_HOST=127.0.0.1
MAIL_PORT=2525
MAIL_USERNAME=null
MAIL_PASSWORD=null
MAIL_FROM_ADDRESS="hello@example.com"
MAIL_FROM_NAME="$APP_NAME"

AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
AWS_DEFAULT_REGION=us-east-1
AWS_BUCKET=
AWS_USE_PATH_STYLE_ENDPOINT=false

FACEBOOK=https://www.facebook.com/clement.tribouillard/
LINKEDIN=https://www.linkedin.com/in/clement-tribouillard/
GITHUB=https://github.com/clemtrib/
TJM=560
RECAPTCHA_PRIVATE_KEY=${{ secrets.RECAPTCHA_PRIVATE_KEY }}

VITE_APP_NAME="$APP_NAME"
VITE_APP_ENV="$APP_ENV"
VITE_RECAPTCHA_SITE_KEY=${{ secrets.VITE_RECAPTCHA_SITE_KEY }}

MIGRATION_WEBHOOK_TOKEN=${{ secrets.MIGRATION_WEBHOOK_TOKEN }}
EOF

      - name: Upload .env to OVH
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: ./
          server-dir: /www/  # adapte en fonction de la racine de ton app
          exclude: |
            **
            !.env

      # Installation des dépendances
      - name: Install dependencies
        run: npm install

      # Construction du frontend Vue
      - name: Build Vue frontend
        run: npm run build

      # Déploiement du dossier build sur OVH (dans le répertoire racine)
      - name: Deploy dist to OVH (in /build)
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: ./public/build/  # Répertoire build généré par Vite
          server-dir: /www/public/build/  # Assure-toi que c'est le bon répertoire sur le serveur

      # Exécution des migrations
      - name: Trigger Migrations
        run: curl -k "https://www.clementtribouillard.com/run-migrations?token=${{ secrets.MIGRATION_WEBHOOK_TOKEN }}"

      # Clear cache
      - name: Clear Cache
        run: curl -k "https://www.clementtribouillard.com/clear-cache?token=${{ secrets.MIGRATION_WEBHOOK_TOKEN }}"

      # Crée le lien symbolique public/storage → storage/app/public.
      - name: Symbolic link public/storage → storage/app/public.
        run: curl -k "https://www.clementtribouillard.com/storage-link?token=${{ secrets.MIGRATION_WEBHOOK_TOKEN }}"
